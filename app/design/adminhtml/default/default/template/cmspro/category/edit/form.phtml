
<div class="content-header">
        <h3 class="icon-head head-categories"><?php echo $this->htmlEscape($this->getHeader()) . ($this->getCategoryId() ? ' (' . Mage::helper('cmspro')->__('ID: %s', $this->getCategoryId()) . ')' : '') ?></h3>
        <p class="content-buttons form-buttons">
            <?php echo $this->getResetButtonHtml() ?>
            <?php if($this->getCategoryId()): ?>
                    <?php echo $this->getDeleteButtonHtml() ?>
            <?php endif; ?>
            <?php echo $this->getAdditionalButtonsHtml(); ?>
            <?php echo $this->getSaveButtonHtml() ?>
        </p>
</div>
<?php  if($this->hasStoreRootCategory()): ?>
    <?php echo $this->getTabsHtml() ?>
<?php  else: ?>
<div class="messages warning-msg">
    <?php  echo Mage::helper('cmspro')->__('Set root category for this store in the <a href="%s">configuration</a>', $this->getStoreConfigurationUrl()) ?>
</div>
<?php  endif; ?>
<iframe name="iframeSave" style="display:none; width:100%;" src="<?php echo $this->getJsUrl() ?>blank.html"></iframe>
<form target="iframeSave" id="category_edit_form" action="<?php echo $this->getSaveUrl() ?>" method="post" enctype="multipart/form-data">
    <input type="hidden" name="isIframe" value="1" />
    <input name="form_key" type="hidden" value="<?php echo $this->getFormKey() ?>" />
    <div class="no-display">
        <input type="hidden" name="category_products" id="in_category_products" value="" />
        <input type="hidden" name="active_tab_id" id="active_tab_id" value="" />
    </div>
    <div id="category_tab_content"></div>
</form>
<script type="text/javascript">
//<![CDATA[
    categoryForm = new varienForm('category_edit_form');

    categoryForm.submit= function (url) {
        this.errorSections = $H({});
        this.canShowError = true;
        this.submitUrl = url;
        if (this.validator && this.validator.validate()) {
            if(this.validationUrl){
                this._validate();
            }
            else{
                if (this.isSubmitted) {
                    return false;
                }
                this.isSubmitted = true;
                this._submit();
            }
            displayLoadingMask();
            return true;
        }
        return false;
    };

    categoryForm.refreshPath = function () {

        categoryId = this.getCategoryId();

        if (!categoryId) {
            return false;
        }

        var refreshPathSuccess = function(transport) {
            if (transport.responseText.isJSON()) {
                response = transport.responseText.evalJSON()
                if (response.error) {
                    alert(response.message);
                } else {
                    if (categoryForm.getCategoryId() == response['id']) {
                        categoryForm.setCategoryPath(response['path']);
                    }
                }
            }
        };

        new Ajax.Request(
                '<?php echo $this->getRefreshPathUrl() ?>',
                {
                    method:     'POST',
                    evalScripts: true,
                    onSuccess: refreshPathSuccess
                }
        );

    };

    categoryForm.getCategoryId = function () {
        collection = $(this.formId).getInputs('hidden','general[id]');
        if (collection.size() > 0) {
            return collection.first().value;
        }
        return false;
    };

    categoryForm.setCategoryPath = function (path) {
        collection = $(this.formId).getInputs('hidden','general[path]');
        if (collection.size() > 0) {
            return collection.first().value = path;
        }
    };

    function categorySubmit(url) {
        var activeTab = $('active_tab_id');
        if (activeTab) {
            if (activeTab.tabsJsObject && activeTab.tabsJsObject.activeTab) {
                activeTab.value = activeTab.tabsJsObject.activeTab.id;
            }
        }
		
        var params = {};
        var fields = $('category_edit_form').getElementsBySelector('input', 'select');
        
        for(var i=0;i<fields.length;i++){
            if (!fields[i].name) {
                continue;
            }
            params[fields[i].name] = fields[i].getValue();
        }

       /* if (tree && tree.storeId==0 && !tree.addNodeTo) {
            var currentNode = tree.getNodeById(tree.currentNodeId);
			
            if (currentNode) {
                if (params['general[is_active]']) {
                    var oldClass = 'no-active-category';
                    var newClass = 'active-category';
                } else {
                    var oldClass = 'active-category';
                    var newClass = 'no-active-category';
                }

                Element.removeClassName(currentNode.ui.wrap.firstChild, oldClass);
                Element.addClassName(currentNode.ui.wrap.firstChild, newClass);

          /*      var name = currentNode.text;

                if (!name.match(/(\(\d+\))/)) {
                   name = params['general[name]'];
                } else {
                    name = name.replace(/(.+)\(/,params['general[name]']+' (');
                }
                currentNode.setText(name);
            }
        }*/

        /**
         * We submit first loaded form
         */

       /* if (!tree.currentNodeId) {
            tree.currentNodeId = tree.root.id;
            tree.addNodeTo = tree.currentNodeId;
        }*/
        categoryForm.submit();
    }

<?php if($this->isAjax() && ($block = $this->getLayout()->getBlock('tabs')) && ($_tabsJsObject=$block->getJsObjectName())): ?>
    <?php echo $_tabsJsObject ?>.moveTabContentInDest();
    if (<?php echo $_tabsJsObject ?>.activeTab) {
        $('active_tab_id').value = <?php echo $_tabsJsObject ?>.activeTab.id;
    }
    $('active_tab_id').tabsJsObject = <?php echo $_tabsJsObject ?>;
<?php endif; ?>

updateTopButtonToolbarToggle();

//]]>
</script>
